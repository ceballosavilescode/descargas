"""main.py — Ejecuta un script remoto de Selenium en modo headless.
Compatibilidad: Python 3.8+
"""

from __future__ import annotations  # PEP 563: postpone annotations (mejora compatibilidad)

import requests
import getpass
from typing import Optional, Dict, Any
from selenium import webdriver
from selenium.webdriver.firefox.options import Options
from selenium.webdriver.firefox.service import Service

# -----------------------------------------------------------------------------
# Configuración del WebDriver
# -----------------------------------------------------------------------------

def iniciar_driver(headless: bool = True) -> webdriver.Firefox:
	"""Crea y devuelve un Firefox WebDriver.

	*Aprovecha Selenium Manager* (Selenium ≥ 4.6) para descargar/gestionar
	`geckodriver`, por lo que no necesitas instalarlo manualmente.
	"""
	opts = Options()
	if headless:
		#opts.add_argument("--headless")
		pass
	service = Service()  # Selenium Manager resuelve geckodriver
	driver = webdriver.Firefox(service=service, options=opts)
	driver.implicitly_wait(10)
	return driver


# -----------------------------------------------------------------------------
# Descarga y ejecución de código remoto
# -----------------------------------------------------------------------------

def ejecutar_codigo_desde_url(
	url: str,
	variables: Optional[Dict[str, Any]] = None,
	usar_selenium: bool = False,
	headless: bool = True,
) -> None:
	"""Descarga el script Python de *url* y lo ejecuta.

	Si *usar_selenium* es ``True``, se inicializa un WebDriver y se inyecta en
	el diccionario ``variables`` con la clave ``"driver"``.
	"""
	resp = requests.get(url, timeout=30)
	resp.raise_for_status()
	code = resp.text

	# Espacio de nombres aislado para el exec
	global_scope: Dict[str, Any] = {}

	driver: Optional[webdriver.Firefox] = None
	if usar_selenium:
		driver = iniciar_driver(headless=headless)
		if variables is None:
			variables = {}
		variables["driver"] = driver

	if variables:
		global_scope.update(variables)

	try:
		exec(code, global_scope)
	finally:
		if driver is not None:
			driver.quit()


# -----------------------------------------------------------------------------
# Punto de entrada
# -----------------------------------------------------------------------------

if __name__ == "__main__":
	REMOTE_SCRIPT = (
		"https://raw.githubusercontent.com/ceballosavilescode/descargas/refs/heads/main/descargar_cartera_financiera_contable")

	usuario_pc = getpass.getuser()
	variables_remotas: Dict[str, Any] = {
		"user": "ceballos",
		"password": "456",
		"usuario_pc": usuario_pc,
	}

	# Ejecuta el script remoto con Selenium en modo headless
	ejecutar_codigo_desde_url(
		REMOTE_SCRIPT,
		variables=variables_remotas,
		usar_selenium=True,
		headless=True,
	)
